apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "flattrack.fullname" . }}
  labels:
    {{- include "flattrack.labels" . | nindent 4 }}
{{- if .Values.labels }}
{{- with .Values.labels }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
{{- if .Values.annotations }}
{{- with .Values.annotations }}
    {{- toYaml . | nindent 4 }}
{{- end }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "flattrack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "flattrack.selectorLabels" . | nindent 8 }}
    {{- if .Values.labels }}
    {{- with .Values.labels }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- end }}
      annotations:
    {{- if .Values.annotations }}
    {{- with .Values.annotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- end }}
    {{- if .Values.prometheus.enabled }}
        prometheus.io/path: /metrics
        prometheus.io/port: "2112"
        prometheus.io/scrape: "true"
    {{- end }}
    spec:
      automountServiceAccountToken: false
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 12 }}
          env:
            {{- if .Values.postgres.enabled }}
            - name: APP_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-db-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-db-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-db-host
            - name: APP_DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-db-database
            - name: APP_DB_SSLMODE
              value: {{ .Values.postgres.sslmode }}
            {{- end }}
            - name: APP_PORT
              value: {{ printf ":%v" .Values.service.port | toString | quote | default "8080" }}
            {{- if .Values.smtp.enabled }}
            - name: APP_SMTP_ENABLED
              value: {{ .Values.smtp.enabled | toString | quote | default "false" }}
            - name: APP_SMTP_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-smtp-username
            - name: APP_SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-smtp-password
            - name: APP_SMTP_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-smtp-host
            - name: APP_SMTP_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "flattrack.fullname" . }}
                  key: app-smtp-port
            {{- end }}
            - name: APP_URL
              value: {{ .Values.siteURL }}
        {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port | default 8080 }}
              protocol: TCP
            - name: health
              containerPort: 2112
              protocol: TCP
            {{- if "flattrack.prometheus.enabled" }}
            - name: prometheus
              containerPort: 2112
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /_healthz
              port: health
            initialDelaySeconds: 2
            failureThreshold: 10
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 2
            periodSeconds: 10
            failureThreshold: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
