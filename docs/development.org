#+TITLE: Development
#+AUTHOR: Caleb Woodbine <calebwoodbine.public@gmail.com>

* Development
Requirements:
- [[https://golang.org/doc/install][golang]]
- [[https://nodejs.org/en/download/][nodejs]]
- a [[https://www.postgresql.org/download/][Postgres]] database

** Set up Postgres

Docker/Podman:
#+begin_src shell
  docker run -d \
         --name flattrack-postgres \
         -p 5432:5432 \
         -e POSTGRES_DB=flattrack \
         -e POSTGRES_USER=flattrack \
         -e POSTGRES_PASSWORD=flattrack \
         postgres:12.2-alpine
#+end_src

Ubuntu/Debian:
#+begin_src shell
  sudo apt install postgresql
  sudo -u postgres createuser --interactive
  sudo -u postgres createdb flattrack
  sudo adduser flattrack
#+end_src

Manually connecting to the Postgres database:
#+begin_src shell
  psql -U flattrack -d flattrack -w -h localhost
#+end_src
(entering the password as FlatTrack)

** Frontend build
Navigate to the ~web~ folder.

Install Frontend dependencies
#+begin_src shell
  npm i
#+end_src

Build the frontend
#+begin_src shell
  npm run build
#+end_src

** Backend build

Navigate to the root of the repo.

Build the backend
#+begin_src shell
  go build -o bin/flattrack ./main.go
#+end_src

** Write an environment file

Write the credientials for the database into ~.env~
#+begin_src shell
APP_DB_USERNAME=flattrack
APP_DB_PASSWORD=flattrack
APP_DB_DATABASE=flattrack
APP_DB_HOST=localhost
#+end_src

*** Start the backend
#+begin_src
  ./flattrack
#+end_src

** Additional
*** Remove migrations   
   #+begin_src shell
   gomigrate -source "file://$(pwd)/migrations" -database postgres://flattrack:flattrack@localhost/flattrack?sslmode=disable down
   #+end_src

** Project structure and details
*** API
Written in golang, the API is located in [[https://gitlab.com/flattrack/flattrack/-/tree/master/pkg/routes][pkg/routes]].

The features and areas are separated into packages.

**** Testing
Tests are located in [[https://gitlab.com/flattrack/flattrack/-/tree/master/test/backend/e2e][test/backend/e2e]]. So far there are only e2e tests for FlatTrack's API.

*** Frontend
Written in Vue.js + JavaScript, the frontend is located in [[https://gitlab.com/flattrack/flattrack/-/tree/master/test/frontend][web]].

The frontend makes requests to the backend to perform actions.

*** Database
The migrations and database structuring is located in [[https://gitlab.com/flattrack/flattrack/-/tree/master/migrations][migrations]].
Each table is created with [[https://github.com/golang-migrate/migrate][golang-migrate]].

*** Assets
Images are located in [[https://gitlab.com/flattrack/flattrack/-/tree/master/web/assets][web/assets]], these are used throughout the project (such as in the frontend, and readme).

** Docs
To run the docs in development, use:
#+begin_src sh
  firn serve
#+end_src

** Making a release checklist
Things to do before making a release:
- update helm chart version
- ensure docs represent the latest changes
- ensure linting passes

