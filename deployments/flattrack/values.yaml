siteURLOverride: ""
realIPHeader: ""
timezone: ""
embeddedHTML: ""

# how many flattrack pods there should be
replicaCount: 1

image:
  repository: registry.gitlab.com/flattrack/flattrack
  # uncomment to use specified tag instead of appVersion 
  tag: ""
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podSecurityContext:
  readOnlyRootFilesystem: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 8080
  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: true

horizonalPodAutoscaler:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 3

prometheus:
  enabled: true

networkPolicy:
  enabled: false
  # ingress:
  # - from:
  #   - namespaceSelector:
  #       matchLabels:
  #         app: nginx-ingress
  #     podSelector:
  #       matchLabels:
  #         app: nginx-ingress
  # - from:
  #   - podSelector:
  #       matchLabels:
  #         app: postgres
  egress: {}

extraEnvVars: []

# connect to an existing postgres database
postgres:
  enabled: true
  username: ""
  password: ""
  passwordSecretRef:
    name: ""
    key: ""
  host: ""
  port: "5432"
  database: ""
  sslmode: disable

smtp:
  enabled: false
  username: ""
  password: ""
  host: ""
  port: ""

# add labels to all resources
labels: {}

# add annotations to all resources
annotations: {}

ingress:
  enabled: false
  certmanager:
    enabled: false
    email: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 250m
    memory: 40Mi
  requests:
    cpu: 250m
    memory: 40Mi

nodeSelector: {}

tolerations: []

affinity: {}
