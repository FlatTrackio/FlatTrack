stages:
  - build

services:
  - docker:stable-dind

variables:
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  ARCH_DEFAULT: "amd64"

build-armv7:
  stage: build
  image: docker:stable
  only:
    - tags
  variables:
    ARCH: "arm/v7"
  before_script:
    - set -x
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - |
      mkdir -p $HOME/.docker/cli-plugins
      wget -O $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
      chmod +x $HOME/.docker/cli-plugins/docker-buildx 
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      docker buildx create --use --name builder
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - |
      set -x
      
      ARCH_TAGGABLE_NAME="$(echo $ARCH | sed -e 's,/,,g')"
      if [ ! "$ARCH" = "$ARCH_DEFAULT" ]; then
        PRINT_ARCH="-$ARCH_TAGGABLE_NAME"
      fi
      if [ -n "$CI_COMMIT_TAG" ]; then
         DOCKER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG$PRINT_ARCH"
      fi
      docker buildx build --platform linux/$ARCH -f $CI_PROJECT_DIR/Dockerfile --push -t $CI_REGISTRY_IMAGE:latest$PRINT_ARCH $DOCKER_EXTRA_DESTINATION $CI_PROJECT_DIR

build-amd64:
  stage: build
  image: docker:stable
  variables:
    ARCH: "amd64"
  before_script:
    - set -x
    - |
      if ! docker info &>/dev/null; then
        if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
          export DOCKER_HOST='tcp://localhost:2375'
        fi
      fi
    - |
      mkdir -p $HOME/.docker/cli-plugins
      wget -O $HOME/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.3.1/buildx-v0.3.1.linux-amd64
      chmod +x $HOME/.docker/cli-plugins/docker-buildx 
      docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
      docker buildx create --use --name builder
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - |
      set -x
      
      ARCH_TAGGABLE_NAME="$(echo $ARCH | sed -e 's,/,,g')"
      if [ ! "$ARCH" = "$ARCH_DEFAULT" ]; then
        PRINT_ARCH="-$ARCH_TAGGABLE_NAME"
      fi
      if [ -n "$CI_COMMIT_TAG" ]; then
         DOCKER_EXTRA_DESTINATION="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG$PRINT_ARCH"
      fi
      docker buildx build --platform linux/$ARCH -f $CI_PROJECT_DIR/Dockerfile --push -t $CI_REGISTRY_IMAGE:latest$PRINT_ARCH $DOCKER_EXTRA_DESTINATION $CI_PROJECT_DIR

